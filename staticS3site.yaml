## Static site with SSL
## This template takes in 3 parameters: a valid S3 bucket name, a hosted zone name, and the ARN of an Amazon Certificate
## Manager certificate. This template assumes you already have a Route 53 hosted zone set up  for this domain.
## As an example: if I have the domain test.com and want to use this template, I would put the bucket name as 'test.com'
## and the hosted zone would also be 'test.com', assuming that I've already set it up in Route53.
Metadata: 
  License: Apache-2.0
Description: 'AWS Static Website Hosted With S3 and CloudFront with SSL'
Parameters:
  S3BucketName:
    Type: String
    Description: The name given to the S3 bucket
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid S3 bucket name.
  AcmCertificate:
    Type: String
    Description: The ARN of a valid ACM certificate.
  HostedZoneName:
    Type: String
    Description: The name of the hosted zone. 
Resources:
  WebAppS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref 'S3BucketName'
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
  WebAppS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebAppS3Bucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action:
            - s3:GetObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'S3BucketName', '/*']]
  WebAppCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref 'S3BucketName'
        Origins:
          - DomainName: !Select [1, !Split ['http://', !GetAtt WebAppS3Bucket.WebsiteURL]]
            Id: WebApp
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        Enabled: 'true'
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          TargetOriginId: WebApp
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref 'AcmCertificate'
          SslSupportMethod: 'sni-only'
          MinimumProtocolVersion: 'TLSv1.1_2016'
  WebAppRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt WebAppCloudFrontDistribution.DomainName
        HostedZoneId: **********
      HostedZoneName: !Ref 'HostedZoneName'
      Name: !Ref 'S3BucketName'
      Type: 'A'
